// This file is generated by the 'node-soap-servicegenerator'
// visit : https://github.com/BreeeZe/node-soap-servicegenerator for more info

var NOT_IMPLEMENTED = {
  Fault: {
    Code: {
      Value: "soap:client"
    },
    Reason: {
      Text: "Method not implemented"
    }
  }
};
var exports = module.exports = {};

exports.DeviceService = {
  DeviceService : {
    Device : {
      //var GetServices = { 
        //IncludeCapability : { xs:boolean}
      //
      //};
      GetServices : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetServicesResponse = { 
          //Service : { 
            //Namespace : { xs:anyURI},
            //XAddr : { xs:anyURI},
            //Capabilities : { },
            //Version : { 
              //Major : { xs:int},
              //Minor : { xs:int}
            //}
          //}
        //
        //};
        //return GetServicesResponse;
      },

      //var GetServiceCapabilities = { };
      GetServiceCapabilities : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetServiceCapabilitiesResponse = { 
          //Capabilities : { 
            //Network : { 
              //attributes : {
                //IPFilter : {xs:boolean},
                //ZeroConfiguration : {xs:boolean},
                //IPVersion6 : {xs:boolean},
                //DynDNS : {xs:boolean},
                //Dot11Configuration : {xs:boolean},
                //Dot1XConfigurations : {xs:int},
                //HostnameFromDHCP : {xs:boolean},
                //NTP : {xs:int},
                //DHCPv6 : {xs:boolean}
              //}
            //},
            //Security : { 
              //attributes : {
                //TLS1.0 : {xs:boolean},
                //TLS1.1 : {xs:boolean},
                //TLS1.2 : {xs:boolean},
                //OnboardKeyGeneration : {xs:boolean},
                //AccessPolicyConfig : {xs:boolean},
                //DefaultAccessPolicy : {xs:boolean},
                //Dot1X : {xs:boolean},
                //RemoteUserHandling : {xs:boolean},
                //X.509Token : {xs:boolean},
                //SAMLToken : {xs:boolean},
                //KerberosToken : {xs:boolean},
                //UsernameToken : {xs:boolean},
                //HttpDigest : {xs:boolean},
                //RELToken : {xs:boolean},
                //SupportedEAPMethods : {tds:EAPMethodTypes},
                //MaxUsers : {xs:int},
                //MaxUserNameLength : {xs:int},
                //MaxPasswordLength : {xs:int}
              //}
            //},
            //System : { 
              //attributes : {
                //DiscoveryResolve : {xs:boolean},
                //DiscoveryBye : {xs:boolean},
                //RemoteDiscovery : {xs:boolean},
                //SystemBackup : {xs:boolean},
                //SystemLogging : {xs:boolean},
                //FirmwareUpgrade : {xs:boolean},
                //HttpFirmwareUpgrade : {xs:boolean},
                //HttpSystemBackup : {xs:boolean},
                //HttpSystemLogging : {xs:boolean},
                //HttpSupportInformation : {xs:boolean},
                //StorageConfiguration : {xs:boolean}
              //}
            //},
            //Misc : { 
              //attributes : {
                //AuxiliaryCommands : {tt:StringAttrList}
              //}
            //}
          //}
        //
        //};
        //return GetServiceCapabilitiesResponse;
      },

      //var GetDeviceInformation = { };
      GetDeviceInformation : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDeviceInformationResponse = { 
          //Manufacturer : { xs:string},
          //Model : { xs:string},
          //FirmwareVersion : { xs:string},
          //SerialNumber : { xs:string},
          //HardwareId : { xs:string}
        //
        //};
        //return GetDeviceInformationResponse;
      },

      //var SetSystemDateAndTime = { 
        //DateTimeType : { xs:string},
        //DaylightSavings : { xs:boolean},
        //TimeZone : { 
          //TZ : { xs:token}
        //},
        //UTCDateTime : { 
          //Time : { 
            //Hour : { xs:int},
            //Minute : { xs:int},
            //Second : { xs:int}
          //},
          //Date : { 
            //Year : { xs:int},
            //Month : { xs:int},
            //Day : { xs:int}
          //}
        //}
      //
      //};
      SetSystemDateAndTime : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetSystemDateAndTimeResponse = { };
        //return SetSystemDateAndTimeResponse;
      },

      //var GetSystemDateAndTime = { };
      GetSystemDateAndTime : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetSystemDateAndTimeResponse = { 
          //SystemDateAndTime : { 
            //DateTimeType : { xs:string},
            //DaylightSavings : { xs:boolean},
            //TimeZone : { 
              //TZ : { xs:token}
            //},
            //UTCDateTime : { 
              //Time : { 
                //Hour : { xs:int},
                //Minute : { xs:int},
                //Second : { xs:int}
              //},
              //Date : { 
                //Year : { xs:int},
                //Month : { xs:int},
                //Day : { xs:int}
              //}
            //},
            //LocalDateTime : { 
              //Time : { 
                //Hour : { xs:int},
                //Minute : { xs:int},
                //Second : { xs:int}
              //},
              //Date : { 
                //Year : { xs:int},
                //Month : { xs:int},
                //Day : { xs:int}
              //}
            //},
            //Extension : { }
          //}
        //
        //};
        //return GetSystemDateAndTimeResponse;
      },

      //var SetSystemFactoryDefault = { 
        //FactoryDefault : { xs:string}
      //
      //};
      SetSystemFactoryDefault : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetSystemFactoryDefaultResponse = { };
        //return SetSystemFactoryDefaultResponse;
      },

      //var UpgradeSystemFirmware = { 
        //Firmware : { 
          //attributes : {
            //undefined : {}
          //}
        //}
      //
      //};
      UpgradeSystemFirmware : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var UpgradeSystemFirmwareResponse = { 
          //Message : [{ xs:string}]
        //
        //};
        //return UpgradeSystemFirmwareResponse;
      },

      //var SystemReboot = { };
      SystemReboot : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SystemRebootResponse = { 
          //Message : { xs:string}
        //
        //};
        //return SystemRebootResponse;
      },

      //var RestoreSystem = { 
        //BackupFiles : [{ 
          //Name : { xs:string},
          //Data : { 
            //attributes : {
              //undefined : {}
            //}
          //}
        //}]
      //
      //};
      RestoreSystem : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var RestoreSystemResponse = { };
        //return RestoreSystemResponse;
      },

      //var GetSystemBackup = { };
      GetSystemBackup : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetSystemBackupResponse = { 
          //BackupFiles : [{ 
            //Name : { xs:string},
            //Data : { 
              //attributes : {
                //undefined : {}
              //}
            //}
          //}]
        //
        //};
        //return GetSystemBackupResponse;
      },

      //var GetSystemLog = { 
        //LogType : { xs:string}
      //
      //};
      GetSystemLog : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetSystemLogResponse = { 
          //SystemLog : { 
            //Binary : { 
              //attributes : {
                //undefined : {}
              //}
            //},
            //String : { xs:string}
          //}
        //
        //};
        //return GetSystemLogResponse;
      },

      //var GetSystemSupportInformation = { };
      GetSystemSupportInformation : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetSystemSupportInformationResponse = { 
          //SupportInformation : { 
            //Binary : { 
              //attributes : {
                //undefined : {}
              //}
            //},
            //String : { xs:string}
          //}
        //
        //};
        //return GetSystemSupportInformationResponse;
      },

      //var GetScopes = { };
      GetScopes : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetScopesResponse = { 
          //Scopes : [{ 
            //ScopeDef : { xs:string},
            //ScopeItem : { xs:anyURI}
          //}]
        //
        //};
        //return GetScopesResponse;
      },

      //var SetScopes = { 
        //Scopes : [{ xs:anyURI}]
      //
      //};
      SetScopes : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetScopesResponse = { };
        //return SetScopesResponse;
      },

      //var AddScopes = { 
        //ScopeItem : [{ xs:anyURI}]
      //
      //};
      AddScopes : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var AddScopesResponse = { };
        //return AddScopesResponse;
      },

      //var RemoveScopes = { 
        //ScopeItem : [{ xs:anyURI}]
      //
      //};
      RemoveScopes : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var RemoveScopesResponse = { 
          //ScopeItem : [{ xs:anyURI}]
        //
        //};
        //return RemoveScopesResponse;
      },

      //var GetDiscoveryMode = { };
      GetDiscoveryMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDiscoveryModeResponse = { 
          //DiscoveryMode : { xs:string}
        //
        //};
        //return GetDiscoveryModeResponse;
      },

      //var SetDiscoveryMode = { 
        //DiscoveryMode : { xs:string}
      //
      //};
      SetDiscoveryMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetDiscoveryModeResponse = { };
        //return SetDiscoveryModeResponse;
      },

      //var GetRemoteDiscoveryMode = { };
      GetRemoteDiscoveryMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetRemoteDiscoveryModeResponse = { 
          //RemoteDiscoveryMode : { xs:string}
        //
        //};
        //return GetRemoteDiscoveryModeResponse;
      },

      //var SetRemoteDiscoveryMode = { 
        //RemoteDiscoveryMode : { xs:string}
      //
      //};
      SetRemoteDiscoveryMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetRemoteDiscoveryModeResponse = { };
        //return SetRemoteDiscoveryModeResponse;
      },

      //var GetDPAddresses = { };
      GetDPAddresses : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDPAddressesResponse = { 
          //DPAddress : [{ 
            //Type : { xs:string},
            //IPv4Address : { xs:token},
            //IPv6Address : { xs:token},
            //DNSname : { xs:token},
            //Extension : { }
          //}]
        //
        //};
        //return GetDPAddressesResponse;
      },

      //var SetDPAddresses = { 
        //DPAddress : [{ 
          //Type : { xs:string},
          //IPv4Address : { xs:token},
          //IPv6Address : { xs:token},
          //DNSname : { xs:token},
          //Extension : { }
        //}]
      //
      //};
      SetDPAddresses : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetDPAddressesResponse = { };
        //return SetDPAddressesResponse;
      },

      //var GetEndpointReference = { };
      GetEndpointReference : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetEndpointReferenceResponse = { 
          //GUID : { xs:string}
        //
        //};
        //return GetEndpointReferenceResponse;
      },

      //var GetRemoteUser = { };
      GetRemoteUser : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetRemoteUserResponse = { 
          //RemoteUser : { 
            //Username : { xs:string},
            //Password : { xs:string},
            //UseDerivedPassword : { xs:boolean}
          //}
        //
        //};
        //return GetRemoteUserResponse;
      },

      //var SetRemoteUser = { 
        //RemoteUser : { 
          //Username : { xs:string},
          //Password : { xs:string},
          //UseDerivedPassword : { xs:boolean}
        //}
      //
      //};
      SetRemoteUser : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetRemoteUserResponse = { };
        //return SetRemoteUserResponse;
      },

      //var GetUsers = { };
      GetUsers : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetUsersResponse = { 
          //User : [{ 
            //Username : { xs:string},
            //Password : { xs:string},
            //UserLevel : { xs:string},
            //Extension : { }
          //}]
        //
        //};
        //return GetUsersResponse;
      },

      //var CreateUsers = { 
        //User : [{ 
          //Username : { xs:string},
          //Password : { xs:string},
          //UserLevel : { xs:string},
          //Extension : { }
        //}]
      //
      //};
      CreateUsers : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var CreateUsersResponse = { };
        //return CreateUsersResponse;
      },

      //var DeleteUsers = { 
        //Username : [{ xs:string}]
      //
      //};
      DeleteUsers : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var DeleteUsersResponse = { };
        //return DeleteUsersResponse;
      },

      //var SetUser = { 
        //User : [{ 
          //Username : { xs:string},
          //Password : { xs:string},
          //UserLevel : { xs:string},
          //Extension : { }
        //}]
      //
      //};
      SetUser : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetUserResponse = { };
        //return SetUserResponse;
      },

      //var GetWsdlUrl = { };
      GetWsdlUrl : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetWsdlUrlResponse = { 
          //WsdlUrl : { xs:anyURI}
        //
        //};
        //return GetWsdlUrlResponse;
      },

      //var GetCapabilities = { 
        //Category : [{ xs:string}]
      //
      //};
      GetCapabilities : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetCapabilitiesResponse = { 
          //Capabilities : { 
            //Analytics : { 
              //XAddr : { xs:anyURI},
              //RuleSupport : { xs:boolean},
              //AnalyticsModuleSupport : { xs:boolean}
            //},
            //Device : { 
              //XAddr : { xs:anyURI},
              //Network : { 
                //IPFilter : { xs:boolean},
                //ZeroConfiguration : { xs:boolean},
                //IPVersion6 : { xs:boolean},
                //DynDNS : { xs:boolean},
                //Extension : { 
                  //Dot11Configuration : { xs:boolean},
                  //Extension : { }
                //}
              //},
              //System : { 
                //DiscoveryResolve : { xs:boolean},
                //DiscoveryBye : { xs:boolean},
                //RemoteDiscovery : { xs:boolean},
                //SystemBackup : { xs:boolean},
                //SystemLogging : { xs:boolean},
                //FirmwareUpgrade : { xs:boolean},
                //SupportedVersions : { 
                  //Major : { xs:int},
                  //Minor : { xs:int}
                //},
                //Extension : { 
                  //HttpFirmwareUpgrade : { xs:boolean},
                  //HttpSystemBackup : { xs:boolean},
                  //HttpSystemLogging : { xs:boolean},
                  //HttpSupportInformation : { xs:boolean},
                  //Extension : { }
                //}
              //},
              //IO : { 
                //InputConnectors : { xs:int},
                //RelayOutputs : { xs:int},
                //Extension : { 
                  //Auxiliary : { xs:boolean},
                  //AuxiliaryCommands : [{ xs:string}],
                  //Extension : { }
                //}
              //},
              //Security : { 
                //TLS1.1 : { xs:boolean},
                //TLS1.2 : { xs:boolean},
                //OnboardKeyGeneration : { xs:boolean},
                //AccessPolicyConfig : { xs:boolean},
                //X.509Token : { xs:boolean},
                //SAMLToken : { xs:boolean},
                //KerberosToken : { xs:boolean},
                //RELToken : { xs:boolean},
                //Extension : { 
                  //TLS1.0 : { xs:boolean},
                  //Extension : { 
                    //Dot1X : { xs:boolean},
                    //SupportedEAPMethod : [{ xs:int}],
                    //RemoteUserHandling : { xs:boolean}
                  //}
                //}
              //},
              //Extension : { }
            //},
            //Events : { 
              //XAddr : { xs:anyURI},
              //WSSubscriptionPolicySupport : { xs:boolean},
              //WSPullPointSupport : { xs:boolean},
              //WSPausableSubscriptionManagerInterfaceSupport : { xs:boolean}
            //},
            //Imaging : { 
              //XAddr : { xs:anyURI}
            //},
            //Media : { 
              //XAddr : { xs:anyURI},
              //StreamingCapabilities : { 
                //RTPMulticast : { xs:boolean},
                //RTP_TCP : { xs:boolean},
                //RTP_RTSP_TCP : { xs:boolean},
                //Extension : { }
              //},
              //Extension : { 
                //ProfileCapabilities : { 
                  //MaximumNumberOfProfiles : { xs:int}
                //}
              //}
            //},
            //PTZ : { 
              //XAddr : { xs:anyURI}
            //},
            //Extension : { 
              //DeviceIO : { 
                //XAddr : { xs:anyURI},
                //VideoSources : { xs:int},
                //VideoOutputs : { xs:int},
                //AudioSources : { xs:int},
                //AudioOutputs : { xs:int},
                //RelayOutputs : { xs:int}
              //},
              //Display : { 
                //XAddr : { xs:anyURI},
                //FixedLayout : { xs:boolean}
              //},
              //Recording : { 
                //XAddr : { xs:anyURI},
                //ReceiverSource : { xs:boolean},
                //MediaProfileSource : { xs:boolean},
                //DynamicRecordings : { xs:boolean},
                //DynamicTracks : { xs:boolean},
                //MaxStringLength : { xs:int}
              //},
              //Search : { 
                //XAddr : { xs:anyURI},
                //MetadataSearch : { xs:boolean}
              //},
              //Replay : { 
                //XAddr : { xs:anyURI}
              //},
              //Receiver : { 
                //XAddr : { xs:anyURI},
                //RTP_Multicast : { xs:boolean},
                //RTP_TCP : { xs:boolean},
                //RTP_RTSP_TCP : { xs:boolean},
                //SupportedReceivers : { xs:int},
                //MaximumRTSPURILength : { xs:int}
              //},
              //AnalyticsDevice : { 
                //XAddr : { xs:anyURI},
                //RuleSupport : { xs:boolean},
                //Extension : { }
              //},
              //Extensions : { }
            //}
          //}
        //
        //};
        //return GetCapabilitiesResponse;
      },

      //var GetHostname = { };
      GetHostname : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetHostnameResponse = { 
          //HostnameInformation : { 
            //FromDHCP : { xs:boolean},
            //Name : { xs:token},
            //Extension : { }
          //}
        //
        //};
        //return GetHostnameResponse;
      },

      //var SetHostname = { 
        //Name : { xs:token}
      //
      //};
      SetHostname : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetHostnameResponse = { };
        //return SetHostnameResponse;
      },

      //var SetHostnameFromDHCP = { 
        //FromDHCP : { xs:boolean}
      //
      //};
      SetHostnameFromDHCP : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetHostnameFromDHCPResponse = { 
          //RebootNeeded : { xs:boolean}
        //
        //};
        //return SetHostnameFromDHCPResponse;
      },

      //var GetDNS = { };
      GetDNS : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDNSResponse = { 
          //DNSInformation : { 
            //FromDHCP : { xs:boolean},
            //SearchDomain : [{ xs:token}],
            //DNSFromDHCP : [{ 
              //Type : { xs:string},
              //IPv4Address : { xs:token},
              //IPv6Address : { xs:token}
            //}],
            //DNSManual : [{ 
              //Type : { xs:string},
              //IPv4Address : { xs:token},
              //IPv6Address : { xs:token}
            //}],
            //Extension : { }
          //}
        //
        //};
        //return GetDNSResponse;
      },

      //var SetDNS = { 
        //FromDHCP : { xs:boolean},
        //SearchDomain : [{ xs:token}],
        //DNSManual : [{ 
          //Type : { xs:string},
          //IPv4Address : { xs:token},
          //IPv6Address : { xs:token}
        //}]
      //
      //};
      SetDNS : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetDNSResponse = { };
        //return SetDNSResponse;
      },

      //var GetNTP = { };
      GetNTP : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetNTPResponse = { 
          //NTPInformation : { 
            //FromDHCP : { xs:boolean},
            //NTPFromDHCP : [{ 
              //Type : { xs:string},
              //IPv4Address : { xs:token},
              //IPv6Address : { xs:token},
              //DNSname : { xs:token},
              //Extension : { }
            //}],
            //NTPManual : [{ 
              //Type : { xs:string},
              //IPv4Address : { xs:token},
              //IPv6Address : { xs:token},
              //DNSname : { xs:token},
              //Extension : { }
            //}],
            //Extension : { }
          //}
        //
        //};
        //return GetNTPResponse;
      },

      //var SetNTP = { 
        //FromDHCP : { xs:boolean},
        //NTPManual : [{ 
          //Type : { xs:string},
          //IPv4Address : { xs:token},
          //IPv6Address : { xs:token},
          //DNSname : { xs:token},
          //Extension : { }
        //}]
      //
      //};
      SetNTP : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetNTPResponse = { };
        //return SetNTPResponse;
      },

      //var GetDynamicDNS = { };
      GetDynamicDNS : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDynamicDNSResponse = { 
          //DynamicDNSInformation : { 
            //Type : { xs:string},
            //Name : { xs:token},
            //TTL : { xs:duration},
            //Extension : { }
          //}
        //
        //};
        //return GetDynamicDNSResponse;
      },

      //var SetDynamicDNS = { 
        //Type : { xs:string},
        //Name : { xs:token},
        //TTL : { xs:duration}
      //
      //};
      SetDynamicDNS : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetDynamicDNSResponse = { };
        //return SetDynamicDNSResponse;
      },

      //var GetNetworkInterfaces = { };
      GetNetworkInterfaces : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetNetworkInterfacesResponse = { 
          //NetworkInterfaces : [{ 
            //attributes : {
              //token : {tt:ReferenceToken}
            //}
          //
            //Enabled : { xs:boolean},
            //Info : { 
              //Name : { xs:string},
              //HwAddress : { xs:token},
              //MTU : { xs:int}
            //},
            //Link : { 
              //AdminSettings : { 
                //AutoNegotiation : { xs:boolean},
                //Speed : { xs:int},
                //Duplex : { xs:string}
              //},
              //OperSettings : { 
                //AutoNegotiation : { xs:boolean},
                //Speed : { xs:int},
                //Duplex : { xs:string}
              //},
              //InterfaceType : { xs:int}
            //},
            //IPv4 : { 
              //Enabled : { xs:boolean},
              //Config : { 
                //Manual : [{ 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //}],
                //LinkLocal : { 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //},
                //FromDHCP : { 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //},
                //DHCP : { xs:boolean}
              //}
            //},
            //IPv6 : { 
              //Enabled : { xs:boolean},
              //Config : { 
                //AcceptRouterAdvert : { xs:boolean},
                //DHCP : { xs:string},
                //Manual : [{ 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //}],
                //LinkLocal : [{ 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //}],
                //FromDHCP : [{ 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //}],
                //FromRA : [{ 
                  //Address : { xs:token},
                  //PrefixLength : { xs:int}
                //}],
                //Extension : { }
              //}
            //},
            //Extension : { 
              //InterfaceType : { xs:int},
              //Dot3 : [{ }],
              //Dot11 : [{ 
                //SSID : { xs:hexBinary},
                //Mode : { xs:string},
                //Alias : { xs:string},
                //Priority : { xs:integer},
                //Security : { 
                  //Mode : { xs:string},
                  //Algorithm : { xs:string},
                  //PSK : { 
                    //Key : { xs:hexBinary},
                    //Passphrase : { xs:string},
                    //Extension : { }
                  //},
                  //Dot1X : { xs:string},
                  //Extension : { }
                //}
              //}],
              //Extension : { }
            //}
          //}]
        //
        //};
        //return GetNetworkInterfacesResponse;
      },

      //var SetNetworkInterfaces = { 
        //InterfaceToken : { xs:string},
        //NetworkInterface : { 
          //Enabled : { xs:boolean},
          //Link : { 
            //AutoNegotiation : { xs:boolean},
            //Speed : { xs:int},
            //Duplex : { xs:string}
          //},
          //MTU : { xs:int},
          //IPv4 : { 
            //Enabled : { xs:boolean},
            //Manual : [{ 
              //Address : { xs:token},
              //PrefixLength : { xs:int}
            //}],
            //DHCP : { xs:boolean}
          //},
          //IPv6 : { 
            //Enabled : { xs:boolean},
            //AcceptRouterAdvert : { xs:boolean},
            //Manual : [{ 
              //Address : { xs:token},
              //PrefixLength : { xs:int}
            //}],
            //DHCP : { xs:string}
          //},
          //Extension : { 
            //Dot3 : [{ }],
            //Dot11 : [{ 
              //SSID : { xs:hexBinary},
              //Mode : { xs:string},
              //Alias : { xs:string},
              //Priority : { xs:integer},
              //Security : { 
                //Mode : { xs:string},
                //Algorithm : { xs:string},
                //PSK : { 
                  //Key : { xs:hexBinary},
                  //Passphrase : { xs:string},
                  //Extension : { }
                //},
                //Dot1X : { xs:string},
                //Extension : { }
              //}
            //}],
            //Extension : { }
          //}
        //}
      //
      //};
      SetNetworkInterfaces : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetNetworkInterfacesResponse = { 
          //RebootNeeded : [{ xs:boolean}]
        //
        //};
        //return SetNetworkInterfacesResponse;
      },

      //var GetNetworkProtocols = { };
      GetNetworkProtocols : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetNetworkProtocolsResponse = { 
          //NetworkProtocols : [{ 
            //Name : { xs:string},
            //Enabled : { xs:boolean},
            //Port : { xs:int},
            //Extension : { }
          //}]
        //
        //};
        //return GetNetworkProtocolsResponse;
      },

      //var SetNetworkProtocols = { 
        //NetworkProtocols : [{ 
          //Name : { xs:string},
          //Enabled : { xs:boolean},
          //Port : { xs:int},
          //Extension : { }
        //}]
      //
      //};
      SetNetworkProtocols : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetNetworkProtocolsResponse = { };
        //return SetNetworkProtocolsResponse;
      },

      //var GetNetworkDefaultGateway = { };
      GetNetworkDefaultGateway : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetNetworkDefaultGatewayResponse = { 
          //NetworkGateway : { 
            //IPv4Address : [{ xs:token}],
            //IPv6Address : [{ xs:token}]
          //}
        //
        //};
        //return GetNetworkDefaultGatewayResponse;
      },

      //var SetNetworkDefaultGateway = { 
        //IPv4Address : [{ xs:token}],
        //IPv6Address : [{ xs:token}]
      //
      //};
      SetNetworkDefaultGateway : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetNetworkDefaultGatewayResponse = { };
        //return SetNetworkDefaultGatewayResponse;
      },

      //var GetZeroConfiguration = { };
      GetZeroConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetZeroConfigurationResponse = { 
          //ZeroConfiguration : { 
            //InterfaceToken : { xs:string},
            //Enabled : { xs:boolean},
            //Addresses : [{ xs:token}]
          //}
        //
        //};
        //return GetZeroConfigurationResponse;
      },

      //var SetZeroConfiguration = { 
        //InterfaceToken : { xs:string},
        //Enabled : { xs:boolean}
      //
      //};
      SetZeroConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetZeroConfigurationResponse = { };
        //return SetZeroConfigurationResponse;
      },

      //var GetIPAddressFilter = { };
      GetIPAddressFilter : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetIPAddressFilterResponse = { 
          //IPAddressFilter : { 
            //Type : { xs:string},
            //IPv4Address : [{ 
              //Address : { xs:token},
              //PrefixLength : { xs:int}
            //}],
            //IPv6Address : [{ 
              //Address : { xs:token},
              //PrefixLength : { xs:int}
            //}],
            //Extension : { }
          //}
        //
        //};
        //return GetIPAddressFilterResponse;
      },

      //var SetIPAddressFilter = { 
        //IPAddressFilter : { 
          //Type : { xs:string},
          //IPv4Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //IPv6Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //Extension : { }
        //}
      //
      //};
      SetIPAddressFilter : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetIPAddressFilterResponse = { };
        //return SetIPAddressFilterResponse;
      },

      //var AddIPAddressFilter = { 
        //IPAddressFilter : { 
          //Type : { xs:string},
          //IPv4Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //IPv6Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //Extension : { }
        //}
      //
      //};
      AddIPAddressFilter : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var AddIPAddressFilterResponse = { };
        //return AddIPAddressFilterResponse;
      },

      //var RemoveIPAddressFilter = { 
        //IPAddressFilter : { 
          //Type : { xs:string},
          //IPv4Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //IPv6Address : [{ 
            //Address : { xs:token},
            //PrefixLength : { xs:int}
          //}],
          //Extension : { }
        //}
      //
      //};
      RemoveIPAddressFilter : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var RemoveIPAddressFilterResponse = { };
        //return RemoveIPAddressFilterResponse;
      },

      //var GetAccessPolicy = { };
      GetAccessPolicy : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetAccessPolicyResponse = { 
          //PolicyFile : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //}
        //
        //};
        //return GetAccessPolicyResponse;
      },

      //var SetAccessPolicy = { 
        //PolicyFile : { 
          //attributes : {
            //undefined : {}
          //},
          //Data : { xs:base64Binary}
        //}
      //
      //};
      SetAccessPolicy : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetAccessPolicyResponse = { };
        //return SetAccessPolicyResponse;
      },

      //var CreateCertificate = { 
        //CertificateID : { xs:token},
        //Subject : { xs:string},
        //ValidNotBefore : { xs:dateTime},
        //ValidNotAfter : { xs:dateTime}
      //
      //};
      CreateCertificate : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var CreateCertificateResponse = { 
          //NvtCertificate : { 
            //CertificateID : { xs:token},
            //Certificate : { 
              //attributes : {
                //undefined : {}
              //},
              //Data : { xs:base64Binary}
            //}
          //}
        //
        //};
        //return CreateCertificateResponse;
      },

      //var GetCertificates = { };
      GetCertificates : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetCertificatesResponse = { 
          //NvtCertificate : [{ 
            //CertificateID : { xs:token},
            //Certificate : { 
              //attributes : {
                //undefined : {}
              //},
              //Data : { xs:base64Binary}
            //}
          //}]
        //
        //};
        //return GetCertificatesResponse;
      },

      //var GetCertificatesStatus = { };
      GetCertificatesStatus : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetCertificatesStatusResponse = { 
          //CertificateStatus : [{ 
            //CertificateID : { xs:token},
            //Status : { xs:boolean}
          //}]
        //
        //};
        //return GetCertificatesStatusResponse;
      },

      //var SetCertificatesStatus = { 
        //CertificateStatus : [{ 
          //CertificateID : { xs:token},
          //Status : { xs:boolean}
        //}]
      //
      //};
      SetCertificatesStatus : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetCertificatesStatusResponse = { };
        //return SetCertificatesStatusResponse;
      },

      //var DeleteCertificates = { 
        //CertificateID : [{ xs:token}]
      //
      //};
      DeleteCertificates : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var DeleteCertificatesResponse = { };
        //return DeleteCertificatesResponse;
      },

      //var GetPkcs10Request = { 
        //CertificateID : { xs:token},
        //Subject : { xs:string},
        //Attributes : { 
          //attributes : {
            //undefined : {}
          //},
          //Data : { xs:base64Binary}
        //}
      //
      //};
      GetPkcs10Request : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetPkcs10RequestResponse = { 
          //Pkcs10Request : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //}
        //
        //};
        //return GetPkcs10RequestResponse;
      },

      //var LoadCertificates = { 
        //NVTCertificate : [{ 
          //CertificateID : { xs:token},
          //Certificate : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //}
        //}]
      //
      //};
      LoadCertificates : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var LoadCertificatesResponse = { };
        //return LoadCertificatesResponse;
      },

      //var GetClientCertificateMode = { };
      GetClientCertificateMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetClientCertificateModeResponse = { 
          //Enabled : { xs:boolean}
        //
        //};
        //return GetClientCertificateModeResponse;
      },

      //var SetClientCertificateMode = { 
        //Enabled : { xs:boolean}
      //
      //};
      SetClientCertificateMode : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetClientCertificateModeResponse = { };
        //return SetClientCertificateModeResponse;
      },

      //var GetRelayOutputs = { };
      GetRelayOutputs : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetRelayOutputsResponse = { 
          //RelayOutputs : [{ 
            //attributes : {
              //token : {tt:ReferenceToken}
            //}
          //
            //Properties : { 
              //Mode : { xs:string},
              //DelayTime : { xs:duration},
              //IdleState : { xs:string}
            //}
          //}]
        //
        //};
        //return GetRelayOutputsResponse;
      },

      //var SetRelayOutputSettings = { 
        //RelayOutputToken : { xs:string},
        //Properties : { 
          //Mode : { xs:string},
          //DelayTime : { xs:duration},
          //IdleState : { xs:string}
        //}
      //
      //};
      SetRelayOutputSettings : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetRelayOutputSettingsResponse = { };
        //return SetRelayOutputSettingsResponse;
      },

      //var SetRelayOutputState = { 
        //RelayOutputToken : [{ xs:string}],
        //LogicalState : [{ xs:string}]
      //
      //};
      SetRelayOutputState : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetRelayOutputStateResponse = { };
        //return SetRelayOutputStateResponse;
      },

      //var SendAuxiliaryCommand = { 
        //AuxiliaryCommand : [{ xs:string}]
      //
      //};
      SendAuxiliaryCommand : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SendAuxiliaryCommandResponse = { 
          //AuxiliaryCommandResponse : [{ xs:string}]
        //
        //};
        //return SendAuxiliaryCommandResponse;
      },

      //var GetCACertificates = { };
      GetCACertificates : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetCACertificatesResponse = { 
          //CACertificate : [{ 
            //CertificateID : { xs:token},
            //Certificate : { 
              //attributes : {
                //undefined : {}
              //},
              //Data : { xs:base64Binary}
            //}
          //}]
        //
        //};
        //return GetCACertificatesResponse;
      },

      //var LoadCertificateWithPrivateKey = { 
        //CertificateWithPrivateKey : [{ 
          //CertificateID : { xs:token},
          //Certificate : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //},
          //PrivateKey : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //}
        //}]
      //
      //};
      LoadCertificateWithPrivateKey : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var LoadCertificateWithPrivateKeyResponse = { };
        //return LoadCertificateWithPrivateKeyResponse;
      },

      //var GetCertificateInformation = { 
        //CertificateID : [{ xs:token}]
      //
      //};
      GetCertificateInformation : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetCertificateInformationResponse = { 
          //CertificateInformation : [{ 
            //CertificateID : { xs:token},
            //IssuerDN : { xs:string},
            //SubjectDN : { xs:string},
            //KeyUsage : { 
              //xs:string
              //attributes : {
                //Critical : {xs:boolean}
              //}
            //
            //},
            //ExtendedKeyUsage : { 
              //xs:string
              //attributes : {
                //Critical : {xs:boolean}
              //}
            //
            //},
            //KeyLength : { xs:int},
            //Version : { xs:string},
            //SerialNum : { xs:string},
            //SignatureAlgorithm : { xs:string},
            //Validity : { 
              //From : { xs:dateTime},
              //Until : { xs:dateTime}
            //},
            //Extension : { }
          //}]
        //
        //};
        //return GetCertificateInformationResponse;
      },

      //var LoadCACertificates = { 
        //CACertificate : [{ 
          //CertificateID : { xs:token},
          //Certificate : { 
            //attributes : {
              //undefined : {}
            //},
            //Data : { xs:base64Binary}
          //}
        //}]
      //
      //};
      LoadCACertificates : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var LoadCACertificatesResponse = { };
        //return LoadCACertificatesResponse;
      },

      //var CreateDot1XConfiguration = { 
        //Dot1XConfiguration : [{ 
          //Dot1XConfigurationToken : { xs:string},
          //Identity : { xs:string},
          //AnonymousID : { xs:string},
          //EAPMethod : { xs:int},
          //CACertificateID : [{ xs:token}],
          //EAPMethodConfiguration : { 
            //TLSConfiguration : { 
              //CertificateID : { xs:token}
            //},
            //Password : { xs:string},
            //Extension : { }
          //},
          //Extension : { }
        //}]
      //
      //};
      CreateDot1XConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var CreateDot1XConfigurationResponse = { };
        //return CreateDot1XConfigurationResponse;
      },

      //var SetDot1XConfiguration = { 
        //Dot1XConfiguration : [{ 
          //Dot1XConfigurationToken : { xs:string},
          //Identity : { xs:string},
          //AnonymousID : { xs:string},
          //EAPMethod : { xs:int},
          //CACertificateID : [{ xs:token}],
          //EAPMethodConfiguration : { 
            //TLSConfiguration : { 
              //CertificateID : { xs:token}
            //},
            //Password : { xs:string},
            //Extension : { }
          //},
          //Extension : { }
        //}]
      //
      //};
      SetDot1XConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetDot1XConfigurationResponse = { };
        //return SetDot1XConfigurationResponse;
      },

      //var GetDot1XConfiguration = { 
        //Dot1XConfigurationToken : [{ xs:string}]
      //
      //};
      GetDot1XConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDot1XConfigurationResponse = { 
          //Dot1XConfiguration : [{ 
            //Dot1XConfigurationToken : { xs:string},
            //Identity : { xs:string},
            //AnonymousID : { xs:string},
            //EAPMethod : { xs:int},
            //CACertificateID : [{ xs:token}],
            //EAPMethodConfiguration : { 
              //TLSConfiguration : { 
                //CertificateID : { xs:token}
              //},
              //Password : { xs:string},
              //Extension : { }
            //},
            //Extension : { }
          //}]
        //
        //};
        //return GetDot1XConfigurationResponse;
      },

      //var GetDot1XConfigurations = { };
      GetDot1XConfigurations : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDot1XConfigurationsResponse = { 
          //Dot1XConfiguration : [{ 
            //Dot1XConfigurationToken : { xs:string},
            //Identity : { xs:string},
            //AnonymousID : { xs:string},
            //EAPMethod : { xs:int},
            //CACertificateID : [{ xs:token}],
            //EAPMethodConfiguration : { 
              //TLSConfiguration : { 
                //CertificateID : { xs:token}
              //},
              //Password : { xs:string},
              //Extension : { }
            //},
            //Extension : { }
          //}]
        //
        //};
        //return GetDot1XConfigurationsResponse;
      },

      //var DeleteDot1XConfiguration = { 
        //Dot1XConfigurationToken : [{ xs:string}]
      //
      //};
      DeleteDot1XConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var DeleteDot1XConfigurationResponse = { };
        //return DeleteDot1XConfigurationResponse;
      },

      //var GetDot11Capabilities = { };
      GetDot11Capabilities : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDot11CapabilitiesResponse = { 
          //Capabilities : { 
            //TKIP : { xs:boolean},
            //ScanAvailableNetworks : { xs:boolean},
            //MultipleConfiguration : { xs:boolean},
            //AdHocStationMode : { xs:boolean},
            //WEP : { xs:boolean}
          //}
        //
        //};
        //return GetDot11CapabilitiesResponse;
      },

      //var GetDot11Status = { 
        //InterfaceToken : { xs:string}
      //
      //};
      GetDot11Status : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetDot11StatusResponse = { 
          //Status : { 
            //SSID : { xs:hexBinary},
            //BSSID : { xs:string},
            //PairCipher : { xs:string},
            //GroupCipher : { xs:string},
            //SignalStrength : { xs:string},
            //ActiveConfigAlias : { xs:string}
          //}
        //
        //};
        //return GetDot11StatusResponse;
      },

      //var ScanAvailableDot11Networks = { 
        //InterfaceToken : { xs:string}
      //
      //};
      ScanAvailableDot11Networks : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var ScanAvailableDot11NetworksResponse = { 
          //Networks : [{ 
            //SSID : { xs:hexBinary},
            //BSSID : { xs:string},
            //AuthAndMangementSuite : [{ xs:string}],
            //PairCipher : [{ xs:string}],
            //GroupCipher : [{ xs:string}],
            //SignalStrength : { xs:string},
            //Extension : { }
          //}]
        //
        //};
        //return ScanAvailableDot11NetworksResponse;
      },

      //var GetSystemUris = { };
      GetSystemUris : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetSystemUrisResponse = { 
          //SystemLogUris : [{ 
            //SystemLog : [{ 
              //Type : { xs:string},
              //Uri : { xs:anyURI}
            //}]
          //}],
          //SupportInfoUri : [{ xs:anyURI}],
          //SystemBackupUri : [{ xs:anyURI}],
          //Extension : { }
        //
        //};
        //return GetSystemUrisResponse;
      },

      //var StartFirmwareUpgrade = { };
      StartFirmwareUpgrade : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var StartFirmwareUpgradeResponse = { 
          //UploadUri : { xs:anyURI},
          //UploadDelay : { xs:duration},
          //ExpectedDownTime : { xs:duration}
        //
        //};
        //return StartFirmwareUpgradeResponse;
      },

      //var StartSystemRestore = { };
      StartSystemRestore : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var StartSystemRestoreResponse = { 
          //UploadUri : { xs:anyURI},
          //ExpectedDownTime : { xs:duration}
        //
        //};
        //return StartSystemRestoreResponse;
      },

      //var GetStorageConfigurations = { };
      GetStorageConfigurations : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetStorageConfigurationsResponse = { 
          //StorageConfigurations : [{ 
            //attributes : {
              //token : {tt:ReferenceToken}
            //}
          //
            //Data : { 
              //attributes : {
                //type : {xs:string}
              //},
              //LocalPath : { xs:anyURI},
              //StorageUri : { xs:anyURI},
              //User : { 
                //UserName : { xs:string},
                //Password : { xs:string},
                //Extension : { }
              //},
              //Extension : { }
            //}
          //}]
        //
        //};
        //return GetStorageConfigurationsResponse;
      },

      //var CreateStorageConfiguration = { 
        //StorageConfiguration : { 
          //attributes : {
            //type : {xs:string}
          //},
          //LocalPath : { xs:anyURI},
          //StorageUri : { xs:anyURI},
          //User : { 
            //UserName : { xs:string},
            //Password : { xs:string},
            //Extension : { }
          //},
          //Extension : { }
        //}
      //
      //};
      CreateStorageConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var CreateStorageConfigurationResponse = { 
          //Token : { xs:string}
        //
        //};
        //return CreateStorageConfigurationResponse;
      },

      //var GetStorageConfiguration = { 
        //Token : { xs:string}
      //
      //};
      GetStorageConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var GetStorageConfigurationResponse = { 
          //StorageConfiguration : { 
            //attributes : {
              //token : {tt:ReferenceToken}
            //}
          //
            //Data : { 
              //attributes : {
                //type : {xs:string}
              //},
              //LocalPath : { xs:anyURI},
              //StorageUri : { xs:anyURI},
              //User : { 
                //UserName : { xs:string},
                //Password : { xs:string},
                //Extension : { }
              //},
              //Extension : { }
            //}
          //}
        //
        //};
        //return GetStorageConfigurationResponse;
      },

      //var SetStorageConfiguration = { 
        //StorageConfiguration : { 
          //attributes : {
            //token : {tt:ReferenceToken}
          //}
        //
          //Data : { 
            //attributes : {
              //type : {xs:string}
            //},
            //LocalPath : { xs:anyURI},
            //StorageUri : { xs:anyURI},
            //User : { 
              //UserName : { xs:string},
              //Password : { xs:string},
              //Extension : { }
            //},
            //Extension : { }
          //}
        //}
      //
      //};
      SetStorageConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var SetStorageConfigurationResponse = { };
        //return SetStorageConfigurationResponse;
      },

      //var DeleteStorageConfiguration = { 
        //Token : { xs:string}
      //
      //};
      DeleteStorageConfiguration : function(args /*, cb, headers*/) {
        throw NOT_IMPLEMENTED;
        //var DeleteStorageConfigurationResponse = { };
        //return DeleteStorageConfigurationResponse;
      },

    }
  }
}
